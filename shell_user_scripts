#
# Things to be run for intercative shells
#
# This script is designed to work in Git Bash for Windows and zsh on mac
#
# Dependencies:
# - fzf

alias ll="ls -lGp"
alias la="ls -laGp"
alias path='tr ":" "\n" <<< "$PATH"' # use single quotes to defer $PATH var expansion

# TODO: make equivilent for mac
# Place at the end of a long running command to play a sound on completion
#   sleep 5 && chime
function chime() {
    (powershell -c "(New-Object Media.SoundPlayer C:/Windows/Media/chimes.wav).PlaySync();" &)
}

#
# git shortcuts
#

# git switch branch
alias gsb="git branch --list --all --color -v | cut --character=3- | fzf --ansi --height 20% --reverse --info=inline | sed 's/^remotes\/origin\///' | cut --fields 1 --delimiter ' ' | xargs --no-run-if-empty git switch"

# git create branch
alias gcb="git checkout -b"

# git branch, very verbose. list branches and info
alias gb="git branch -vv"

# git status
alias gs="git status"

# git status short
alias gss="git status --short"

# git fetch
alias gf="git fetch"

# git fetch and fast forward
alias gff="git fetch && git pull --ff-only"

# git update submodules
alias gsu="git submodule update"

export FZF_DEFAULT_OPTS="--layout=reverse --inline-info"

# Type ** then press tab to complete using fzf
export FZF_COMPLETION_TRIGGER='**'

# git diff
# TODO:
# - when a file has both staged and unstaged changes, make the diff preview display the correct changes for the one you have selected
function gd() {
    
    function _gd_list_files() {
        git "${@:2}" 2>/dev/null |
        while read -r line || [[ -n $line ]]; do
            if [ -n "$line" ]; then
                echo -e "\033[0;$1m$line\033[0m"
            fi
        done
    }

    function _gd_preview_diff() {
        local file="$1"
        if [[ ! -f "$file" ]]; then
            echo "File '$file' does not exist. Perhaps it was deleted?"
        elif ! git ls-files --error-unmatch "$file" &>/dev/null; then
            cat "$file"
        elif git diff --exit-code --quiet "$file"; then
            git diff --staged --color "$file"
        else
            git diff --color "$file"
        fi
    }

    function _gd_list_all() {
        _gd_list_files 31 diff --name-only
        _gd_list_files 32 diff --name-only --staged
        _gd_list_files 39 ls-files --others --exclude-standard
    }

    # Needs to be available in fzf subshell
    export -f _gd_preview_diff
    export -f _gd_list_files
    export -f _gd_list_all

    local ALL_FILES=$(_gd_list_all)

    if [[ -z "$ALL_FILES" ]]; then
        echo "No changed files."
        return
    fi

    echo "$ALL_FILES" | fzf \
        --header 'C-s stage, C-u unstage, C-r refresh, C-p toggle preview' \
        --bind 'ctrl-p:change-preview-window(90%|)' \
        --bind 'ctrl-r:reload(_gd_list_all)' \
        --bind 'ctrl-s:execute(git add {})+reload(_gd_list_all)' \
        --bind 'ctrl-u:execute(git unstage {})+reload(_gd_list_all)' \
        --ansi --keep-right --preview '_gd_preview_diff {}'
}

# Install fzf by following the git clone and install method at https://github.com/junegunn/fzf?tab=readme-ov-file#installation
# Source fzf
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Requires `brew install tree`
alias lt="tree -C -L 3"
alias ltt="tree -C"

if [[ "$SHELL" == *zsh ]]; then
    # Zsh prompt
    prompt='%F{green}%2~ %#%f '
    export prompt
fi
